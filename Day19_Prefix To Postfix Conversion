/*Topic : Prefix to Postfix Conversion
Prefix: An expression is called the prefix expression if the operator appears in the expression before the operands. Simply of the form (operator operand1 operand2). 
Example : *+AB-CD (Infix : (A+B) * (C-D))
Postfix: An expression is called the postfix expression if the operator appears in the expression after the operands. Simply of the form (operand1 operand2 operator).
Example : AB+CD-* (Infix : (A+B * (C-D) )

Algorithm for Prefix to Postfix: 
>Read the prefix expression in reverse order(from right to left)
>If the symbol is an operand, then push it onto the stack
>If the symbol is an operator, then pop two operands from the stack
 Create a string by concatenating the two operands and the operator after them.
 string=operand1+operand2+operator
 And push the resultant string back to stack
>Repeat the above steps until end of prefix expression.
*/

//Java program to convert prefix to postfix
import java.util.*;
public class PrefixToPostfix {
    static boolean isOperator(char x){
        switch(x){
            case '+':
            case '-':
            case '/':
            case '*':
                return true;
        }
        return false;
    }
    //convert prefix to postfix expression
    static String preToPost(String pre_exp)
    {
        Stack<String> s=new Stack<String>();
        
        //length of expression
        int length=pre_exp.length();

        //reading from right to left
        for(int i=length-1;i>=0;i--)
        {
            //check if symbol is operator
            if(isOperator(pre_exp.charAt(i)))
            {
                //pop two operands from stack
                String op1=s.peek();
                s.pop();;
                String op2=s.peek();
                s.pop();

                //concatenating the operands and operators
                String temp=op1+op2+pre_exp.charAt(i);
                
                //push string temp back to stack
                s.push(temp);
            }

            //if symbol is an operand
            else{
                    //push the operand to the stack
                    s.push(pre_exp.charAt(i)+"");
            }
        }
        //stack contains only the postfix expression
        return s.peek();
    }
    public static void main(String args[]){
        String pre_exp="*-A/BC-/AKL";
        System.out.println("Postfix : "+preToPost(pre_exp));

    }
}

/*Output:
 Postfix : ABC/-AK/L-*

*/
