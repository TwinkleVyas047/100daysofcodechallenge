/*
Topic : Missing number in array
Problem : 
Given an array of size N-1 such that it only contains distinct integers in the range of 1 to N. Find the missing element.

Example 1:

Input:
N = 5
A[] = {1,2,3,5}
Output: 4
Example 2:

Input:
N = 10
A[] = {6,1,2,8,3,4,7,10,5}
Output: 9

Your Task :
You don't need to read input or print anything. Complete the function MissingNumber() that takes array and N as input  parameters and returns the value of the missing number.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)


Constraints:
1 ≤ N ≤ 106
1 ≤ A[i] ≤ 106


*/

//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));

        int t = Integer.parseInt(br.readLine().trim());
        while (t-- > 0) {
            int n = Integer.parseInt(br.readLine().trim());
            String[] str = br.readLine().trim().split(" ");
            int[] array = new int[n - 1];
            for (int i = 0; i < n - 1; i++) {
                array[i] = Integer.parseInt(str[i]);
            }
            Solution sln = new Solution();
            System.out.println(sln.MissingNumber(array, n));
        }
    }
}
// } Driver Code Ends



// User function Template for Java

class Solution {
    int MissingNumber(int array[], int n) {
        // Your Code Here
        int total = 0, miss=0;
        int arraySum =0;
        total = n*(n+1)/2;
        for(int i =0; i<n-1; i++){
            arraySum+=array[i];
        }
         miss = total-arraySum;
        return miss;
    }
}

/*
Output :
Test case 1: If I take elements out of range
For Input: 
10
1 3 2 4 3 55 3 44 10 30 33
Your Output: 
-70
Expected Output: 
-70

Test Case2:
For Input: 
10
2 4 5 3 6 7 8 10 9
Your Output: 
1
Expected Output: 
1
*/
